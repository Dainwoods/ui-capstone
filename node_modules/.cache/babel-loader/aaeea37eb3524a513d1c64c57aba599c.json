{"ast":null,"code":"var _jsxFileName = \"G:\\\\Websites\\\\development-input\\\\ui-capstone\\\\src\\\\Counter.jsx\";\nimport React, { Component } from \"react\";\n\nclass Counter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.incrementCount = () => {\n      /* TODO (Counter): Use setState() to modify the count. Here’s an example:\r\n          this.setState({\r\n            field: newValue\r\n          });\r\n      */\n      this.setState({\n        count: this.state.count + 1\n      });\n    };\n\n    this.state = {\n      count: 5\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"counter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, this.state.count), React.createElement(\"button\", {\n      onClick: this.incrementCount,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Increment\"));\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["G:/Websites/development-input/ui-capstone/src/Counter.jsx"],"names":["React","Component","Counter","constructor","props","incrementCount","setState","count","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC9BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAQnBC,cARmB,GAQF,MAAM;AACrB;;;;;AAKH,WAAKC,QAAL,CAAc;AAACC,QAAAA,KAAK,EAAE,KAAKC,KAAL,CAAWD,KAAX,GAAmB;AAA3B,OAAd;AACE,KAfkB;;AAGjB,SAAKC,KAAL,GAAa;AACXD,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AAWDE,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKD,KAAL,CAAWD,KAAhB,CAFI,EAIJ;AAAQ,MAAA,OAAO,EAAE,KAAKF,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJI,CADF;AAQD;;AA3B6B;;AA8BhC,eAAeH,OAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      count: 5\r\n    };\r\n  }\r\n\r\n  incrementCount = () => {\r\n    /* TODO (Counter): Use setState() to modify the count. Here’s an example:\r\n        this.setState({\r\n          field: newValue\r\n        });\r\n    */\r\n\tthis.setState({count: this.state.count + 1});\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"counter\">\r\n        {/*TODO (Counter): display the value of count*/}\r\n\t\t<h1>{this.state.count}</h1>\r\n        {/* TODO (Counter): add a button that calls incrementCount() when clicked */}\r\n\t\t<button onClick={this.incrementCount}>Increment</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n"]},"metadata":{},"sourceType":"module"}